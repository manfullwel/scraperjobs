import tkinter as tk
from tkinter import ttk
import sqlite3
from datetime import datetime
import webbrowser

class PenTestingJobTracker:
    def __init__(self, root):
        self.root = root
        self.root.title("Penetration Testing Career Tracker")
        
        # Create database
        self.conn = sqlite3.connect('pentesting_jobs.db')
        self.create_table()
        
        # Main frame
        self.main_frame = ttk.Frame(root, padding="10")
        self.main_frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))
        
        # Job Entry Fields
        ttk.Label(self.main_frame, text="Company:").grid(row=0, column=0, sticky=tk.W)
        self.company_entry = ttk.Entry(self.main_frame, width=40)
        self.company_entry.grid(row=0, column=1, columnspan=2, pady=5)
        
        ttk.Label(self.main_frame, text="Position:").grid(row=1, column=0, sticky=tk.W)
        self.position_entry = ttk.Entry(self.main_frame, width=40)
        self.position_entry.grid(row=1, column=1, columnspan=2, pady=5)
        
        ttk.Label(self.main_frame, text="Location:").grid(row=2, column=0, sticky=tk.W)
        self.location_entry = ttk.Entry(self.main_frame, width=40)
        self.location_entry.grid(row=2, column=1, columnspan=2, pady=5)
        
        ttk.Label(self.main_frame, text="Required Skills:").grid(row=3, column=0, sticky=tk.W)
        self.skills_text = tk.Text(self.main_frame, width=40, height=4)
        self.skills_text.grid(row=3, column=1, columnspan=2, pady=5)
        
        ttk.Label(self.main_frame, text="Job URL:").grid(row=4, column=0, sticky=tk.W)
        self.url_entry = ttk.Entry(self.main_frame, width=40)
        self.url_entry.grid(row=4, column=1, columnspan=2, pady=5)
        
        # Buttons
        ttk.Button(self.main_frame, text="Add Job", command=self.add_job).grid(row=5, column=1, pady=10)
        ttk.Button(self.main_frame, text="View All Jobs", command=self.view_jobs).grid(row=5, column=2, pady=10)
        
        # Results area
        self.results_text = tk.Text(self.main_frame, width=60, height=10)
        self.results_text.grid(row=6, column=0, columnspan=3, pady=10)
        
    def create_table(self):
        cursor = self.conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS jobs (
                id INTEGER PRIMARY KEY,
                company TEXT,
                position TEXT,
                location TEXT,
                skills TEXT,
                url TEXT,
                date_added TEXT
            )
        ''')
        self.conn.commit()
        
    def add_job(self):
        company = self.company_entry.get()
        position = self.position_entry.get()
        location = self.location_entry.get()
        skills = self.skills_text.get("1.0", tk.END).strip()
        url = self.url_entry.get()
        date_added = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        
        cursor = self.conn.cursor()
        cursor.execute('''
            INSERT INTO jobs (company, position, location, skills, url, date_added)
            VALUES (?, ?, ?, ?, ?, ?)
        ''', (company, position, location, skills, url, date_added))
        self.conn.commit()
        
        self.clear_entries()
        self.view_jobs()
        
    def view_jobs(self):
        cursor = self.conn.cursor()
        cursor.execute('SELECT * FROM jobs')
        jobs = cursor.fetchall()
        
        self.results_text.delete("1.0", tk.END)
        for job in jobs:
            job_info = f"""
Company: {job[1]}
Position: {job[2]}
Location: {job[3]}
Required Skills: {job[4]}
URL: {job[5]}
Date Added: {job[6]}
------------------------
"""
            self.results_text.insert(tk.END, job_info)
            
    def clear_entries(self):
        self.company_entry.delete(0, tk.END)
        self.position_entry.delete(0, tk.END)
        self.location_entry.delete(0, tk.END)
        self.skills_text.delete("1.0", tk.END)
        self.url_entry.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = PenTestingJobTracker(root)
    root.mainloop()